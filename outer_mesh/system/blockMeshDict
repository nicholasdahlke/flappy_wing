/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2406                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   0.001;

vertices
( 
    (-137.5 0 -150)
    (-75.888 0 -88.388)
    (-75.888 0 88.388)
    (-137.5 0 150)
    (-137.5 200 -150)
    (-75.888 200 -88.388)
    (-75.888 200 88.388)
    (-137.5 200 150) // 7
    (226.5 0 -150)
    (116.722 0 -69.012)
    (226.5 200 -150)
    (116.722 200 -69.012) // 11
    (226.5 0 150)
    (226.5 200 150)
    (116.722 0 69.012)
    (116.722 200 69.012)

);

blocks
(
    hex (0 1 5 4 3 2 6 7) (50 50 50) simpleGrading (1 1 1)
    hex (0 8 10 4 1 9 11 5) (50 50 50) simpleGrading (1 1 1)
    hex (8 12 13 10 9 14 15 11) (50 50 50) simpleGrading (1 1 1)
    hex (12 3 7 13 14 2 6 15) (50 50 50) simpleGrading (1 1 1)

    
);

edges
(
  arc 1 2 (-112.5 0 0)
  arc 5 6 (-112.5 200 0)
  
  arc 1 9 (12.5 0 -125)
  arc 5 11 (12.5 200 -125)
  
  arc 9 14 (137.5 0 0)
  arc 11 15 (137.5 200 0)
  
  arc 14 2 (12.5 0 125)
  arc 15 6 (12.5 200 125)
);

boundary
(
  AMI
  {
    type patch;
    faces
    (
      (1 2 6 5)
      (1 5 11 9)
      (9 14 15 11)
      (14 2 6 15)
    );
  }
  
  inlet 
  {
    type patch;
    faces
    (
      (0 3 7 4)
    );
  }
  
  outlet
  {
    type patch;
    faces
    (
      (12 8 10 13)
    );
  }
  
  sides
  {
    type patch;
    faces
    (
      (0 1 2 3)
      (0 8 9 1)
      (9 8 12 14)
      (2 14 12 3)
      (4 7 6 5)
      (4 5 11 10)
      (10 11 15 13)
      (6 7 13 15)
    );
  }
  
  top_bottom
  {
    type patch;
    faces
    (
      (3 7 13 12)
      (0 4 10 8)
    );
  }
);


// ************************************************************************* //
